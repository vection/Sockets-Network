/**
   Port scanner phyton - still in progress
*/

import threading
from queue import Queue
import time
import socket

print_lock = threading.Lock()

target = '192.168.1.1'
ip = socket.gethostbyname(target)

f = open("ports2.txt", "w+")


def portscan(port):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        con = s.connect((ip, port))
        with print_lock:
            print('port', port)
            f.write(str(port))
        con.close()
    except:
        pass


def threader():
    while True:
        worker = q.get()
        portscan(worker)
        q.task_done()
        

q = Queue()

# how many threads are we going to allow for
for x in range(300):
     t = threading.Thread(target=threader)

     # classifying as a daemon, so they will die when the main dies
     t.daemon = True

     # begins, must come after daemon definition
     t.start()

start = time.time()

# 100 jobs assigned.
for worker in range(79, 444):
    q.put(worker)

# wait until the thread terminates.
q.join()
